check process nginx with pidfile /var/run/nginx.pid
        group webserver
        start program = "/bin/systemctl start nginx" with timeout 30 seconds
        stop program  = "/bin/systemctl stop nginx"

        if failed
                host dev.anhosefittings.com
                port 80
                protocol http
                username "apache"
                password "aPa@##@18969"
                and request "/"
                # for 3 times within 5 cycles
                # timeout 30 seconds
                # retry 2
        then restart

        if failed
                host dev.anhosefittings.com
                port 443
                protocol https
                username "apache"
                password "aPa@##@18969"
                and request "/"
                and certificate valid > 30 days
        then restart

        if failed
                host dev.anhosefittings.com
                port 443
                protocol https
                username "apache"
                password "aPa@##@18969"
                and request "/catalogsearch/result/?q=fitting"
        then restart

        if cpu > 40% for 2 cycles then alert
        if total cpu > 60% for 2 cycles then alert
        if total cpu > 80% for 5 cycles then restart
        if total memory usage > 1% for 10 cycles then alert
        #if mem > 2000 MB for 5 cycles then stop

        if 5 restarts within 10 cycles then timeout
        depends on php-fpm

check file nginx-error with path /var/log/nginx/error.log
        if match "^timed out" then alert

check process php-fpm with pidfile /run/php/php7.2-fpm.pid
        group webserver
        start program = "/bin/systemctl start php7.2-fpm" with timeout 30 seconds
        stop program  = "/bin/systemctl stop php7.2-fpm"
        if cpu > 40% for 2 cycles then alert
        if total cpu > 60% for 2 cycles then alert
        if total cpu > 80% for 5 cycles then restart
        if total memory usage > 1% for 10 cycles then alert
        #if mem > 2000 MB for 5 cycles then stop

        if failed unixsocket /run/php/php7.2-fpm.sock then restart
        if 5 restarts within 10 cycles then timeout

check process redis-server with pidfile "/var/run/redis/redis-server.pid"
        start program = "/etc/init.d/redis-server start"
        stop program = "/etc/init.d/redis-server stop"
        # if totalmem > 100 Mb then alert
        if cpu usage > 95% for 3 cycles then restart
        if failed host 127.0.0.1 port 6379 then restart
        if 3 restarts within 5 cycles then timeout

check process sphinxsearch with pidfile "/home/ubuntu/public_html/var/sphinx/searchd.pid"
        start program = "/etc/init.d/sphinxsearch start"
        stop program = "/etc/init.d/sphinxsearch stop"
        # if failed port 9312 then restart
        # if 3 restarts within 5 cycles then alert

check system $HOST
        if loadavg (5min) > 3 then alert
        if loadavg (15min) > 1 then alert
        if memory usage > 75% then alert
        if swap usage > 65% then alert
        if cpu usage (user) > 80% then alert
        if cpu usage (system) > 30% then alert
        if cpu usage (wait) > 20% then alert

check filesystem rootfs with path / #Alert if low on disk space.
        if space usage > 90% for 5 cycles then alert

check host aws-rds with address anhosefittings.com
     if failed
        host magento2.c94vofvjn07d.us-east-1.rds.amazonaws.com
        port 3306
        protocol mysql
        username "magento2"
        password "mAg##18969"
     then alert

# create python script to check pages,checkout,search
# create python script to check rds status

# check program hwtest with path /usr/local/bin/hwtest.sh
#        with timeout 500 seconds
#        if status = 1 then alert
#        if status = 3 for 5 cycles then exec "/usr/local/bin/emergency.sh"
# check program list-files with path "/bin/ls -lrt /tmp/"
#        if status != 0 then alert
#
#
#  check program ls with path "/bin/ls /tmp" as uid "www"
#        and gid "staff"
#        if status != 0 then alert

# exec "/home/ubuntu/monit/asdf.sh" as uid "ubuntu" and gid "ubuntu" repeat every 5 cycles

# check program checkOracleDatabase
#       with path /var/monit/programs/checkoracle.pl
#       every "* 8-19 * * 1-5"